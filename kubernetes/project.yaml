# Deployment Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: spring-docker-tutorial
  name: spring-docker-tutorial
  namespace: default
spec:
  selector:
    matchLabels:
      app: spring-docker-tutorial
  replicas: 2 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: spring-docker-tutorial
      name: spring-docker-tutorial
      namespace: default
    spec:
      containers:
        - image: spring-docker-tutorial:1.0
          imagePullPolicy: IfNotPresent
          name: container-0
          ports:
            - containerPort: 8080 # Internal port
              name: http
              protocol: TCP
          env:
            - name: DB_SERVER
              valueFrom:
                configMapKeyRef:
                  name: my-config
                  key: DB_SERVER
                  # value: mysql-prod # instead of direct value get from ConfigMap
          
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /api/greeting/greet
              port: 8080
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 2
            
          resources: {}
#          resources:
#            requests:
#              memory: "4Gi"
#              cpu: "1"
#            limits:
#              memory: "4Gi"
#              cpu: "1"
#      dnsPolicy: ClusterFirst
#      imagePullSecrets:
#        - name: my-docker-registry
      restartPolicy: Always

---
# Config Map
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: spring-docker-tutorial
  name: my-config
data:
  DB_SERVER: mysql-prod
#  application.properties: |
#    management.endpoint.health.show-details=never
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: spring-docker-tutorial
  name: my-secret
type: Opaque
data:
#  application.properties: # Base64 encoded content
---
# Service Configuration
apiVersion: v1
kind: Service
metadata:
  labels:
    app: spring-docker-tutorial
  name: spring-docker-tutorial
  namespace: default
spec:
  ports:
    - name: http
      port: 8080 # The port exposed by the service
      protocol: TCP
      targetPort: 8080 # Internal port
  selector:
    app: spring-docker-tutorial
  sessionAffinity: None
  type: LoadBalancer # type of the service. LoadBalancer indicates that our service will be external.

# Ingress Configuration
---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: spring-docker-tutorial
#  namespace: default
#spec:
#  ingressClassName: nginx
#  rules:
#    - host: kube-app.example.com
#      http:
#        paths:
#          - backend:
#              service:
#                name: kube-app
#                port:
#                  name: http
#            path: /
#            pathType: Prefix